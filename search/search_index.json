{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RBAC Documentation v 1.0.0 Created By: Noor Ameen About me My Name is Noor Ameen, I am DevOps Engineer @ Kaiser Permanente Kubernetes entheuast. I have expertise in Kubernetes, Docker, Docker Swarm, Jenkins CI/CD Pipelines, Groovy Programming language, Ansible, Terraform, Python, GO, and Shell/ Bash scripting. I have expertise in the Google Cloud, AWS, and Microsoft Azure, Extensive experience in GKE, EKS, and ACS. What is RBAC? Role Base Access Control (RBAC) is a method of restricting network access based on the roles of individual users within an enterprise. RBAC is an authorization system that provides fine-grained access to cluster resources. Using RBAC, you can segregate duties within your team and grant only the amount of access to users that they need to perform their jobs. What is a Namespace? In kubernetes a namespace is a logical separation of enviroment. A namespace can be created with the following command kubectl create namespace test-ns . By default a kubernetes cluster create the following namespaces. default - Default namespace for objects with no other namespace. kube-system - The namespace for objects created by the kuberneyes system. kube-public - The namespace created autmatically and readable by all users. Create a namespace naresh@devops-server:~$ kubectl create namespace test-ns namespace/test-ns created naresh@devops-server:~$ Verify if the name space has been created naresh@devops-server:~$ kubectl get namespace NAME STATUS AGE default Active 22h kube-node-lease Active 22h kube-public Active 22h kube-system Active 22h test-ns Active 105s naresh@devops-server:~$ Here some more useful namespace commands: kubectl get namespace - Get namespaces kubectl describe namespace NAME-OF-NAMESPACE - Get details about a namespace What is Service Account? A service account provides an identity for processes that run in a Pod. A service account is a user account which can have access to the kubernetes cluster resources. A service account can be operated by the human or API service to interact with the cluster. Service account can be created with the following command kubectl create serviceaccount test-service . naresh@devops-server:~$ kubectl create serviceaccount test-service serviceaccount/test-service created naresh@devops-server:~$ Varify if the name space has been created naresh@devops-server:~$ kubectl get sa NAME SECRETS AGE default 1 22h test-service 1 8m5s naresh@devops-server:~$ Type of Roles Definition of the permissions for each Kubernetes resource type. There are two type of Roles in kubernetes cluster, 1: Role ClusterRole . Role access are limited to a particular namespace and ClusterRole has cluster wide access to resources. How to Define a Role? The follwing Role.yaml file will define a role in the kubernetes cluster. kind: Role apiVersion: rbac.authorization.k8s.io/v1 metadata: namespace: mynamespace name: example-role rules: - apiGroups: [ ] resources: [ pods ] verbs: [ get , watch , list ] We can dissect the Role.yaml file in details. kind: Role In the 1st line we dine the kubernetes object type which is Role What is RoleBinding Definition of what Subjects (users) have which Roles.","title":"RBAC Documentation v 1.0.0"},{"location":"#rbac-documentation-v-100","text":"","title":"RBAC Documentation v 1.0.0"},{"location":"#created-by-noor-ameen","text":"About me My Name is Noor Ameen, I am DevOps Engineer @ Kaiser Permanente Kubernetes entheuast. I have expertise in Kubernetes, Docker, Docker Swarm, Jenkins CI/CD Pipelines, Groovy Programming language, Ansible, Terraform, Python, GO, and Shell/ Bash scripting. I have expertise in the Google Cloud, AWS, and Microsoft Azure, Extensive experience in GKE, EKS, and ACS.","title":"Created By: Noor Ameen"},{"location":"#what-is-rbac","text":"Role Base Access Control (RBAC) is a method of restricting network access based on the roles of individual users within an enterprise. RBAC is an authorization system that provides fine-grained access to cluster resources. Using RBAC, you can segregate duties within your team and grant only the amount of access to users that they need to perform their jobs.","title":"What is RBAC?"},{"location":"#what-is-a-namespace","text":"In kubernetes a namespace is a logical separation of enviroment. A namespace can be created with the following command kubectl create namespace test-ns . By default a kubernetes cluster create the following namespaces. default - Default namespace for objects with no other namespace. kube-system - The namespace for objects created by the kuberneyes system. kube-public - The namespace created autmatically and readable by all users. Create a namespace naresh@devops-server:~$ kubectl create namespace test-ns namespace/test-ns created naresh@devops-server:~$ Verify if the name space has been created naresh@devops-server:~$ kubectl get namespace NAME STATUS AGE default Active 22h kube-node-lease Active 22h kube-public Active 22h kube-system Active 22h test-ns Active 105s naresh@devops-server:~$ Here some more useful namespace commands: kubectl get namespace - Get namespaces kubectl describe namespace NAME-OF-NAMESPACE - Get details about a namespace","title":"What is a Namespace?"},{"location":"#what-is-service-account","text":"A service account provides an identity for processes that run in a Pod. A service account is a user account which can have access to the kubernetes cluster resources. A service account can be operated by the human or API service to interact with the cluster. Service account can be created with the following command kubectl create serviceaccount test-service . naresh@devops-server:~$ kubectl create serviceaccount test-service serviceaccount/test-service created naresh@devops-server:~$ Varify if the name space has been created naresh@devops-server:~$ kubectl get sa NAME SECRETS AGE default 1 22h test-service 1 8m5s naresh@devops-server:~$","title":"What is Service Account?"},{"location":"#type-of-roles","text":"Definition of the permissions for each Kubernetes resource type. There are two type of Roles in kubernetes cluster, 1: Role ClusterRole . Role access are limited to a particular namespace and ClusterRole has cluster wide access to resources.","title":"Type of Roles"},{"location":"#how-to-define-a-role","text":"The follwing Role.yaml file will define a role in the kubernetes cluster. kind: Role apiVersion: rbac.authorization.k8s.io/v1 metadata: namespace: mynamespace name: example-role rules: - apiGroups: [ ] resources: [ pods ] verbs: [ get , watch , list ] We can dissect the Role.yaml file in details. kind: Role In the 1st line we dine the kubernetes object type which is Role","title":"How to Define a Role?"},{"location":"#what-is-rolebinding","text":"Definition of what Subjects (users) have which Roles.","title":"What is RoleBinding"}]}